name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_couples_workout
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
          
      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
          
      - name: Set up environment variables
        run: |
          echo "POSTGRES_USER=test_user" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=test_password" >> $GITHUB_ENV
          echo "POSTGRES_DB=test_couples_workout" >> $GITHUB_ENV
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
          echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "ALGORITHM=HS256" >> $GITHUB_ENV
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> $GITHUB_ENV
          
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U test_user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          
      - name: Run database migrations
        working-directory: backend
        run: |
          # Create tables and apply migrations if needed
          python -c "
          import asyncio
          from app.core.database import init_db
          asyncio.run(init_db())
          "
          
      - name: Run tests with coverage
        working-directory: backend
        run: |
          pytest backend_test.py -v --cov=app --cov-report=xml --cov-report=html --cov-fail-under=80
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-${{ matrix.python-version }}
          path: |
            backend/htmlcov
            backend/coverage.xml
          retention-days: 30
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: backend/coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy
          
      - name: Run Black (code formatter)
        working-directory: backend
        run: black --check --diff .
        
      - name: Run isort (import sorting)
        working-directory: backend
        run: isort --check-only --diff .
        
      - name: Run flake8 (linting)
        working-directory: backend
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics